\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Jun 25 18:09:43 CEST 2022
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sat Jun 25 18:09:43 CEST 2022
contract=Magazzino[Magazzino\\:\\:isFull()].JML operation contract.0
name=Magazzino[Magazzino\\:\\:isFull()].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Andrea" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))
(keyLog "1" (keyUser "Andrea" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))
(keyLog "2" (keyUser "Andrea" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "4231")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,0,1,1,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,1,0,1,0,1,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,1,0,1,0,1,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0,1,1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0,1,1,0,0"))
(rule "assignment" (formula "7"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,1,0,1,1,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,1,0,1,0,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,0,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,0,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,0,1,1,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,0,1,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,0,1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,0,1,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,0,1,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,1,0,1,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,1,0,1,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,1,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,1,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0,1,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0,1,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,0,1,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0,1,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,0,0,1"))
(rule "Class_invariant_axiom_for_Magazzino" (formula "5") (inst "sk=sk_0") (inst "i=i") (ifseqformula "3"))
(branch "Use Axiom"
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "applyEq" (formula "6") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
   (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
   (rule "cnf_rightDist" (formula "6") (term "0"))
   (rule "distr_forallAnd" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "commute_or" (formula "7") (term "0"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_isFull,savedHeapBefore_isFull"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "for_to_while" (formula "10") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "i"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (builtin "Loop Invariant" (formula "10") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
      (opengoal " ")
   )
   (branch "Body Preserves Invariant"
      (opengoal " ")
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_1"))
      (rule "blockEmpty" (formula "14") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "pullOutSelect" (formula "11") (term "1,0,1,0") (inst "selectSK=Magazzino_prodotti_0"))
      (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
      (rule "simplifySelectOfAnon" (formula "11"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "applyEqReverse" (formula "12") (term "1,0,1,0") (ifseqformula "11"))
      (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
      (rule "eval_order_array_access6" (formula "14") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "replaceKnownSelect_taclet20_0" (formula "14") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "14") (term "0,1,0"))
      (rule "assignment_read_length" (formula "14") (term "1"))
      (branch "Normal Execution (x_arr != null)"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "less_than_comparison_simple" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "emptyModality" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "impRight" (formula "15"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "1"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
         (rule "inEqSimp_homoInEq1" (formula "12"))
         (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "1,0"))
         (rule "times_zero_1" (formula "12") (term "0"))
         (rule "leq_literals" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCallReturn" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "tryEmpty" (formula "15") (term "1"))
         (rule "emptyModality" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "1,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "1,0,1,0,0"))
         (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "0,1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "0,1,1,0,0,0"))
         (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "10"))
         (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "Class_invariant_axiom_for_Magazzino" (formula "15") (inst "i=i_1") (inst "sk=sk_1") (ifseqformula "3"))
         (branch "Use Axiom"
            (builtin "One Step Simplification" (formula "15"))
            (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "0,1,1,0,0,1"))
            (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "1,0,0,1,0,1"))
            (rule "replaceKnownSelect_taclet20_0" (formula "15") (term "1,0,1,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "0,1,1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "1,0,0,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "15") (term "1,0,1,1,0,1"))
            (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
            (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1") (ifseqformula "10"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "15") (term "0,1"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1"))
            (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "arrayLengthNotNegative" (formula "10") (term "0"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
            (rule "arrayLengthNotNegative" (formula "5") (term "0"))
            (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
            (rule "qeq_literals" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "cut_direct" (formula "15") (term "0"))
            (branch "CUT: i_0 = 5 TRUE"
               (opengoal " ")
            )
            (branch "CUT: i_0 = 5 FALSE"
               (builtin "One Step Simplification" (formula "16"))
               (rule "false_right" (formula "16"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "8"))
               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "1"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "5"))
               (opengoal " ")
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "15"))
            (rule "closeTrue" (formula "15"))
         )
      )
      (branch "Null Reference (x_arr = null)"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "12") (term "1,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
         (rule "arrayLengthNotNegative" (formula "6") (term "0"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
         (rule "qeq_literals" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthIsAnInt" (formula "6") (term "0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthIsAnInt" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "arrayLengthNotNegative" (formula "12") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "10"))
         (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCallReturn" (formula "17") (term "1,0,1"))
         (rule "assignment" (formula "17") (term "1,0,1"))
         (rule "methodCallEmpty" (formula "17") (term "1,1,0,1"))
         (rule "tryEmpty" (formula "17") (term "1,1,0,1"))
         (rule "emptyModality" (formula "17") (term "1,1,0,1"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "throwUnfold" (formula "17") (term "1") (inst "#v0=n"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "n"))
         (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_NullPointerException,self_0,exc_0,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0"))
         (branch "Post (NullPointerException)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "16"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0,1,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "orRight" (formula "23"))
            (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
            (rule "assignment" (formula "28") (term "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
            (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
            (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
            (rule "hideAuxiliaryEq" (formula "20"))
            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
            (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
            (rule "hideAuxiliaryEq" (formula "21"))
            (rule "commuteUnion" (formula "16") (term "1,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "15"))
            (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "methodCallThrow" (formula "28") (term "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "throwBox" (formula "28") (term "1"))
            (rule "closeTrue" (formula "28"))
         )
         (branch "Exceptional Post (NullPointerException)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "16"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0,1,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "19"))
            (rule "notLeft" (formula "17"))
            (rule "close" (formula "25") (ifseqformula "24"))
         )
         (branch "Pre (NullPointerException)"
            (builtin "One Step Simplification" (formula "17"))
            (rule "wellFormedAnon" (formula "17"))
            (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "17"))
         )
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeTrue" (formula "6"))
)
)

}
